class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        n = len(coins)
        dp = [[-1 for i in range(amount + 1)] for j in range(n + 1)]

        for i in range(n + 1):
            for j in range(amount + 1):
                if i == 0:
                    dp[i][j] = float('inf')
                if j == 0:
                    dp[i][j] = 0
                elif i == 1:
                    if j % coins[i - 1] == 0:
                        dp[i][j]= j//coins[i-1]
                    else:
                        dp[i][j] = float('inf')
                elif coins[i-1]<=j:
                    dp[i][j] = min(dp[i-1][j], dp[i][j-coins[i-1]] + 1)
                else :
                    dp[i][j]=dp[i-1][j]
        res = -1
        if dp[n][amount] == float('inf'):
            res=-1 
        else:
            res= dp[n][amount]
        return res
