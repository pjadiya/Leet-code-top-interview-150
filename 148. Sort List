# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def merge(self, left, right):
            dummy = ListNode()
            cur = dummy
            while left and right:
                if left.val<right.val:
                    cur.next=left
                    left= left.next
                else:
                    cur.next=right
                    right=right.next
                cur= cur.next
            if left:
                cur.next=left
            if right:
                cur.next=right
            return dummy.next

    def sortList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return head 
        fast = head.next
        slow = head
        while fast and fast.next:
            fast= fast.next.next
            slow= slow.next
        mid_next=slow.next
        slow.next=None
        left = self.sortList(head)
        right = self.sortList(mid_next)
        sortedList = self.merge(left,right)
        return sortedList
