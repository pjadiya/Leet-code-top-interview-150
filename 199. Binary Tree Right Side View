# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        if not root:
            return None
        right_view = []
        queue = deque([(root,0)])
        while queue:

            node, level = queue.popleft()

            if len(right_view)==level:
                right_view.append(node.val)
            else :
                right_view[level]= node.val
            
            if node.left:
                queue.append([node.left,level+1])
            if node.right:
                queue.append([node.right,level+1])
        return right_view
