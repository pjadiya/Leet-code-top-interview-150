# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        carry =0
        head = ListNode()
        root=head
        while l1 or l2:
            if not l1:
                temp_sum = l2.val+carry
                l2=l2.next    
            elif not l2:
                temp_sum = l1.val +carry
                l1=l1.next
            else:    
                temp_sum = l1.val+l2.val +carry
                l1=l1.next
                l2=l2.next
            new_node = ListNode(temp_sum%10)
            carry = temp_sum//10
            root.next= new_node
            root=new_node
        if carry!=0:
            new_node = ListNode(carry)
            root.next= new_node
            root=new_node
        return head.next
