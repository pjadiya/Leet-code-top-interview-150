# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if head ==None:
            return head
        last = head
        ln=1
        while last.next:
            ln+=1
            last=last.next
        k= k%ln
        if k==0:
            return head
        cur = head
        i=1
        while i<(ln-k):
           cur=cur.next
           i+=1
        new_head = cur.next
        cur.next=None
        last.next=head
        return new_head
